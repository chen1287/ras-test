// Verilated -*- C++ -*-
// DESCRIPTION: Verilator output: Symbol table internal header
//
// Internal details; most calling programs do not need this header,
// unless using verilator public meta comments.

#ifndef VERILATED_VRAS__SYMS_H_
#define VERILATED_VRAS__SYMS_H_  // guard

#include "verilated.h"
#include "verilated_fst_c.h"

// INCLUDE MODEL CLASS

#include "VRAS.h"

// INCLUDE MODULE CLASSES
#include "VRAS___024root.h"

// DPI TYPES for DPI Export callbacks (Internal use)
using VRAS__Vcb_get_RAS_RASStack_BOS_value_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*4:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_TOSR_value_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*4:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_TOSW_value_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*4:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_0_ctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*7:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_0_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_10_ctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*7:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_10_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_11_ctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*7:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_11_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_12_ctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*7:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_12_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_13_ctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*7:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_13_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_14_ctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*7:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_14_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_15_ctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*7:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_15_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_1_ctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*7:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_1_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_2_ctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*7:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_2_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_3_ctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*7:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_3_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_4_ctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*7:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_4_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_5_ctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*7:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_5_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_6_ctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*7:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_6_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_7_ctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*7:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_7_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_8_ctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*7:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_8_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_9_ctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*7:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_commit_stack_9_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_io_commit_pop_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_io_commit_push_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_io_redirect_isCall_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_io_redirect_isRet_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_io_redirect_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_io_s3_cancel_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_io_spec_pop_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_io_spec_push_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_nsp_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_realPush_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_sctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*2:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_overflowed_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_0_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_10_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_11_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_12_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_13_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_14_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_15_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_16_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_17_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_18_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_19_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_1_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_20_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_21_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_22_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_23_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_24_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_25_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_26_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_27_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_28_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_29_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_2_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_30_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_31_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_3_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_4_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_5_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_6_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_7_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_8_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_spec_queue_9_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_ssp_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_timingTop_retAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_RAS_RASStack_writeBypassValid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_RAS_s2_spec_push_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_RAS_s3_pop_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_RAS_s3_push_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_RAS_s3_pushed_in_s2_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_clock_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_ctrl_ras_enable_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_last_stage_ftb_entry_always_taken_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_last_stage_ftb_entry_always_taken_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_lower_t = void (*) (VRAS__Syms* __restrict vlSymsp, SData/*11:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_offset_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_tarStat_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*1:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_last_stage_ftb_entry_carry_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_last_stage_ftb_entry_isCall_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_last_stage_ftb_entry_isJalr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_last_stage_ftb_entry_isRet_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_last_stage_ftb_entry_last_may_be_rvi_call_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_last_stage_ftb_entry_pftAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_lower_t = void (*) (VRAS__Syms* __restrict vlSymsp, IData/*19:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_offset_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_tarStat_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*1:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_last_stage_ftb_entry_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_0_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_0_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_0_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_0_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_0_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_0_jalr_target_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_0_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_0_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_0_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_0_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_0_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_0_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_1_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_1_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_1_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_1_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_1_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_1_jalr_target_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_1_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_1_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_1_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_1_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_1_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_1_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_2_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_2_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_2_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_2_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_2_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_2_is_call_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_2_is_jalr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_2_is_ret_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_2_jalr_target_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_2_last_may_be_rvi_call_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_2_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_2_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_2_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_2_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_2_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_2_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_3_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_3_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_3_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_3_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_3_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_3_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_3_jalr_target_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_3_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_3_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_3_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_3_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_3_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s2_full_pred_3_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_0_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_0_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_0_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_0_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_0_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_0_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_0_jalr_target_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_0_multiHit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_0_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_0_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_0_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_0_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_1_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_1_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_1_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_1_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_1_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_1_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_1_jalr_target_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_1_multiHit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_1_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_1_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_1_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_1_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_2_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_2_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_2_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_2_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_2_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_2_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_2_is_call_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_2_is_jalr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_2_is_ret_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_2_jalr_target_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_2_multiHit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_2_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_2_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_2_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_2_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_3_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_3_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_3_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_3_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_3_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_3_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_3_jalr_target_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_3_multiHit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_3_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_3_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_3_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_3_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_3_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_resp_in_0_s3_full_pred_3_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_s0_pc_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_s0_pc_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_s0_pc_2_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_in_bits_s0_pc_3_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_ftb_entry_always_taken_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_ftb_entry_always_taken_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_ftb_entry_brSlots_0_lower_t = void (*) (VRAS__Syms* __restrict vlSymsp, SData/*11:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_ftb_entry_brSlots_0_offset_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_ftb_entry_brSlots_0_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_ftb_entry_brSlots_0_tarStat_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*1:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_ftb_entry_brSlots_0_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_ftb_entry_carry_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_ftb_entry_isCall_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_ftb_entry_isJalr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_ftb_entry_isRet_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_ftb_entry_last_may_be_rvi_call_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_ftb_entry_pftAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_ftb_entry_tailSlot_lower_t = void (*) (VRAS__Syms* __restrict vlSymsp, IData/*19:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_ftb_entry_tailSlot_offset_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_ftb_entry_tailSlot_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_ftb_entry_tailSlot_tarStat_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*1:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_ftb_entry_tailSlot_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_ftb_entry_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_meta_t = void (*) (VRAS__Syms* __restrict vlSymsp, VlWide<8>/*250:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_spec_info_NOS_flag_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_spec_info_NOS_value_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*4:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_spec_info_TOSR_flag_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_spec_info_TOSR_value_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*4:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_spec_info_TOSW_flag_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_spec_info_TOSW_value_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*4:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_spec_info_sctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*2:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_spec_info_ssp_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_out_last_stage_spec_info_topAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_0_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_0_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_0_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_0_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_0_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_0_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_0_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_0_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_0_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_0_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_0_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_1_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_1_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_1_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_1_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_1_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_1_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_1_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_1_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_1_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_1_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_1_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_2_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_2_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_2_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_2_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_2_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_2_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_2_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_2_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_2_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_2_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_2_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_3_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_3_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_3_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_3_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_3_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_3_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_3_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_3_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_3_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_3_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_3_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s2_full_pred_3_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s2_pc_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s2_pc_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s2_pc_2_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s2_pc_3_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_0_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_0_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_0_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_0_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_0_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_0_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_0_multiHit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_0_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_0_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_0_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_0_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_1_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_1_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_1_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_1_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_1_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_1_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_1_multiHit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_1_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_1_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_1_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_1_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_2_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_2_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_2_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_2_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_2_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_2_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_2_multiHit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_2_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_2_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_2_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_2_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_3_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_3_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_3_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_3_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_3_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_3_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_3_multiHit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_3_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_3_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_3_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_3_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_3_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s3_full_pred_3_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s3_pc_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s3_pc_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s3_pc_2_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_out_s3_pc_3_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_redirect_bits_cfiUpdate_NOS_flag_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_redirect_bits_cfiUpdate_NOS_value_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*4:0*/ &value);
using VRAS__Vcb_get_io_redirect_bits_cfiUpdate_TOSR_flag_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_redirect_bits_cfiUpdate_TOSR_value_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*4:0*/ &value);
using VRAS__Vcb_get_io_redirect_bits_cfiUpdate_TOSW_flag_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_redirect_bits_cfiUpdate_TOSW_value_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*4:0*/ &value);
using VRAS__Vcb_get_io_redirect_bits_cfiUpdate_pc_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ &value);
using VRAS__Vcb_get_io_redirect_bits_cfiUpdate_pd_isCall_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_redirect_bits_cfiUpdate_pd_isRVC_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_redirect_bits_cfiUpdate_pd_isRet_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_redirect_bits_cfiUpdate_sctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*1:0*/ &value);
using VRAS__Vcb_get_io_redirect_bits_cfiUpdate_ssp_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_redirect_bits_level_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_redirect_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_reset_vector_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*35:0*/ &value);
using VRAS__Vcb_get_io_s0_fire_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_s0_fire_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_s0_fire_2_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_s0_fire_3_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_s1_fire_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_s1_fire_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_s1_fire_2_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_s1_fire_3_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_s2_fire_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_s2_fire_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_s2_fire_2_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_s2_fire_3_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_s3_fire_2_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_s3_redirect_2_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_update_bits_cfi_idx_bits_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_update_bits_cfi_idx_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_update_bits_ftb_entry_isCall_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_update_bits_ftb_entry_isRet_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_update_bits_ftb_entry_tailSlot_offset_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ &value);
using VRAS__Vcb_get_io_update_bits_ftb_entry_tailSlot_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_update_bits_jmp_taken_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_io_update_bits_meta_t = void (*) (VRAS__Syms* __restrict vlSymsp, VlWide<8>/*250:0*/ &value);
using VRAS__Vcb_get_io_update_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_get_reset_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ &value);
using VRAS__Vcb_set_clock_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_ctrl_ras_enable_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_last_stage_ftb_entry_always_taken_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_last_stage_ftb_entry_always_taken_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_lower_t = void (*) (VRAS__Syms* __restrict vlSymsp, SData/*11:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_offset_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_tarStat_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*1:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_last_stage_ftb_entry_brSlots_0_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_last_stage_ftb_entry_carry_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_last_stage_ftb_entry_isCall_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_last_stage_ftb_entry_isJalr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_last_stage_ftb_entry_isRet_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_last_stage_ftb_entry_last_may_be_rvi_call_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_last_stage_ftb_entry_pftAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_lower_t = void (*) (VRAS__Syms* __restrict vlSymsp, IData/*19:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_offset_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_tarStat_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*1:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_last_stage_ftb_entry_tailSlot_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_last_stage_ftb_entry_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_0_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_0_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_0_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_0_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_0_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_0_jalr_target_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_0_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_0_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_0_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_0_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_0_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_0_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_1_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_1_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_1_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_1_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_1_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_1_jalr_target_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_1_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_1_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_1_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_1_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_1_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_1_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_2_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_2_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_2_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_2_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_2_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_2_is_call_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_2_is_jalr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_2_is_ret_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_2_jalr_target_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_2_last_may_be_rvi_call_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_2_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_2_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_2_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_2_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_2_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_2_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_3_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_3_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_3_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_3_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_3_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_3_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_3_jalr_target_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_3_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_3_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_3_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_3_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_3_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s2_full_pred_3_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_0_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_0_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_0_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_0_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_0_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_0_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_0_jalr_target_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_0_multiHit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_0_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_0_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_0_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_0_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_1_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_1_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_1_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_1_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_1_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_1_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_1_jalr_target_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_1_multiHit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_1_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_1_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_1_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_1_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_2_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_2_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_2_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_2_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_2_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_2_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_2_is_call_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_2_is_jalr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_2_is_ret_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_2_jalr_target_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_2_multiHit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_2_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_2_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_2_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_2_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_3_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_3_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_3_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_3_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_3_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_3_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_3_jalr_target_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_3_multiHit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_3_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_3_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_3_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_3_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_3_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_resp_in_0_s3_full_pred_3_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_s0_pc_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_s0_pc_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_s0_pc_2_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_in_bits_s0_pc_3_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_ftb_entry_always_taken_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_ftb_entry_always_taken_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_ftb_entry_brSlots_0_lower_t = void (*) (VRAS__Syms* __restrict vlSymsp, SData/*11:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_ftb_entry_brSlots_0_offset_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_ftb_entry_brSlots_0_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_ftb_entry_brSlots_0_tarStat_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*1:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_ftb_entry_brSlots_0_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_ftb_entry_carry_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_ftb_entry_isCall_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_ftb_entry_isJalr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_ftb_entry_isRet_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_ftb_entry_last_may_be_rvi_call_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_ftb_entry_pftAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_ftb_entry_tailSlot_lower_t = void (*) (VRAS__Syms* __restrict vlSymsp, IData/*19:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_ftb_entry_tailSlot_offset_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_ftb_entry_tailSlot_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_ftb_entry_tailSlot_tarStat_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*1:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_ftb_entry_tailSlot_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_ftb_entry_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_meta_t = void (*) (VRAS__Syms* __restrict vlSymsp, VlWide<8>/*250:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_spec_info_NOS_flag_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_spec_info_NOS_value_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*4:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_spec_info_TOSR_flag_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_spec_info_TOSR_value_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*4:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_spec_info_TOSW_flag_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_spec_info_TOSW_value_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*4:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_spec_info_sctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*2:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_spec_info_ssp_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_out_last_stage_spec_info_topAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_0_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_0_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_0_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_0_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_0_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_0_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_0_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_0_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_0_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_0_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_0_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_1_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_1_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_1_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_1_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_1_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_1_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_1_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_1_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_1_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_1_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_1_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_2_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_2_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_2_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_2_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_2_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_2_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_2_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_2_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_2_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_2_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_2_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_3_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_3_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_3_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_3_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_3_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_3_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_3_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_3_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_3_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_3_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_3_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s2_full_pred_3_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s2_pc_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s2_pc_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s2_pc_2_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s2_pc_3_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_0_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_0_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_0_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_0_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_0_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_0_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_0_multiHit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_0_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_0_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_0_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_0_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_1_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_1_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_1_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_1_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_1_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_1_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_1_multiHit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_1_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_1_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_1_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_1_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_2_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_2_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_2_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_2_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_2_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_2_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_2_multiHit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_2_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_2_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_2_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_2_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_3_br_taken_mask_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_3_br_taken_mask_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_3_fallThroughAddr_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_3_fallThroughErr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_3_hit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_3_is_br_sharing_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_3_multiHit_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_3_offsets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_3_offsets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_3_slot_valids_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_3_slot_valids_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_3_targets_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s3_full_pred_3_targets_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s3_pc_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s3_pc_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s3_pc_2_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_out_s3_pc_3_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_redirect_bits_cfiUpdate_NOS_flag_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_redirect_bits_cfiUpdate_NOS_value_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*4:0*/ value);
using VRAS__Vcb_set_io_redirect_bits_cfiUpdate_TOSR_flag_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_redirect_bits_cfiUpdate_TOSR_value_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*4:0*/ value);
using VRAS__Vcb_set_io_redirect_bits_cfiUpdate_TOSW_flag_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_redirect_bits_cfiUpdate_TOSW_value_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*4:0*/ value);
using VRAS__Vcb_set_io_redirect_bits_cfiUpdate_pc_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*40:0*/ value);
using VRAS__Vcb_set_io_redirect_bits_cfiUpdate_pd_isCall_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_redirect_bits_cfiUpdate_pd_isRVC_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_redirect_bits_cfiUpdate_pd_isRet_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_redirect_bits_cfiUpdate_sctr_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*1:0*/ value);
using VRAS__Vcb_set_io_redirect_bits_cfiUpdate_ssp_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_redirect_bits_level_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_redirect_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_reset_vector_t = void (*) (VRAS__Syms* __restrict vlSymsp, QData/*35:0*/ value);
using VRAS__Vcb_set_io_s0_fire_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_s0_fire_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_s0_fire_2_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_s0_fire_3_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_s1_fire_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_s1_fire_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_s1_fire_2_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_s1_fire_3_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_s2_fire_0_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_s2_fire_1_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_s2_fire_2_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_s2_fire_3_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_s3_fire_2_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_s3_redirect_2_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_update_bits_cfi_idx_bits_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_update_bits_cfi_idx_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_update_bits_ftb_entry_isCall_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_update_bits_ftb_entry_isRet_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_update_bits_ftb_entry_tailSlot_offset_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*3:0*/ value);
using VRAS__Vcb_set_io_update_bits_ftb_entry_tailSlot_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_update_bits_jmp_taken_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_io_update_bits_meta_t = void (*) (VRAS__Syms* __restrict vlSymsp, VlWide<8>/*250:0*/ value);
using VRAS__Vcb_set_io_update_valid_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);
using VRAS__Vcb_set_reset_t = void (*) (VRAS__Syms* __restrict vlSymsp, CData/*0:0*/ value);

// SYMS CLASS (contains all model state)
class VRAS__Syms final : public VerilatedSyms {
  public:
    // INTERNAL STATE
    VRAS* const __Vm_modelp;
    bool __Vm_dumping = false;  // Dumping is active
    VerilatedMutex __Vm_dumperMutex;  // Protect __Vm_dumperp
    VerilatedFstC* __Vm_dumperp VL_GUARDED_BY(__Vm_dumperMutex) = nullptr;  /// Trace class for $dump*
    bool __Vm_activity = false;  ///< Used by trace routines to determine change occurred
    uint32_t __Vm_baseCode = 0;  ///< Used by trace routines when tracing multiple models
    bool __Vm_didInit = false;

    // MODULE INSTANCE STATE
    VRAS___024root                 TOP;

    // COVERAGE
    uint32_t __Vcoverage[8681];

    // SCOPE NAMES
    VerilatedScope __Vscope_RAS_top;

    // CONSTRUCTORS
    VRAS__Syms(VerilatedContext* contextp, const char* namep, VRAS* modelp);
    ~VRAS__Syms();

    // METHODS
    const char* name() { return TOP.name(); }
    void _traceDump();
    void _traceDumpOpen();
    void _traceDumpClose();
} VL_ATTR_ALIGNED(VL_CACHE_LINE_BYTES);

#endif  // guard
