// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module WrBypass_41(	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7]
  input        clock,	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7]
  input        reset,	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7]
  input        io_wen,	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:34:14]
  input  [7:0] io_write_idx,	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:34:14]
  input  [1:0] io_write_data_0,	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:34:14]
  output       io_hit,	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:34:14]
  output [1:0] io_hit_data_0_bits	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:34:14]
);

  wire       _idx_tag_cam_io_r_resp_0_0;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:53:27]
  wire       _idx_tag_cam_io_r_resp_0_1;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:53:27]
  wire       _idx_tag_cam_io_r_resp_0_2;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:53:27]
  wire       _idx_tag_cam_io_r_resp_0_3;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:53:27]
  reg        ever_written_0;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:57:29]
  reg        ever_written_1;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:57:29]
  reg        ever_written_2;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:57:29]
  reg        ever_written_3;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:57:29]
  wire       hits_oh_1 = _idx_tag_cam_io_r_resp_0_1 & ever_written_1;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:53:27, :57:29, :61:83]
  wire       hits_oh_2 = _idx_tag_cam_io_r_resp_0_2 & ever_written_2;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:53:27, :57:29, :61:83]
  wire       hits_oh_3 = _idx_tag_cam_io_r_resp_0_3 & ever_written_3;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:53:27, :57:29, :61:83]
  wire [1:0] hit_idx = {|{hits_oh_3, hits_oh_2}, hits_oh_3 | hits_oh_1};	// @[src/main/scala/chisel3/util/OneHot.scala:30:18, :32:{10,14,28}, src/main/scala/xiangshan/frontend/WrBypass.scala:61:83]
  wire       hit =
    _idx_tag_cam_io_r_resp_0_0 & ever_written_0 | hits_oh_1 | hits_oh_2 | hits_oh_3;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:53:27, :57:29, :61:83, :63:29]
  reg  [2:0] state_reg;	// @[rocket-chip/src/main/scala/util/Replacement.scala:168:72]
  wire [1:0] enq_idx = {state_reg[2], state_reg[2] ? state_reg[1] : state_reg[0]};	// @[rocket-chip/src/main/scala/util/Replacement.scala:168:72, :243:38, :245:38, :249:12, :250:16, rocket-chip/src/main/scala/util/package.scala:155:13]
  wire [1:0] state_reg_touch_way_sized = hit ? hit_idx : enq_idx;	// @[rocket-chip/src/main/scala/util/Replacement.scala:249:12, src/main/scala/chisel3/util/OneHot.scala:32:10, src/main/scala/xiangshan/frontend/WrBypass.scala:63:29, :87:37]
  always @(posedge clock or posedge reset) begin	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7]
    if (reset) begin	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7]
      ever_written_0 <= 1'h0;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7, :57:29]
      ever_written_1 <= 1'h0;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7, :57:29]
      ever_written_2 <= 1'h0;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7, :57:29]
      ever_written_3 <= 1'h0;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7, :57:29]
      state_reg <= 3'h0;	// @[rocket-chip/src/main/scala/util/Replacement.scala:168:72]
    end
    else begin	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7]
      ever_written_0 <= io_wen & ~hit & enq_idx == 2'h0 | ever_written_0;	// @[rocket-chip/src/main/scala/util/Replacement.scala:249:12, src/main/scala/chisel3/util/OneHot.scala:32:14, src/main/scala/xiangshan/frontend/WrBypass.scala:57:29, :63:29, :92:19, :93:18, :98:31]
      ever_written_1 <= io_wen & ~hit & enq_idx == 2'h1 | ever_written_1;	// @[rocket-chip/src/main/scala/util/Replacement.scala:249:12, src/main/scala/xiangshan/frontend/WrBypass.scala:57:29, :63:29, :92:19, :93:18, :95:30, :98:31]
      ever_written_2 <= io_wen & ~hit & enq_idx == 2'h2 | ever_written_2;	// @[rocket-chip/src/main/scala/util/Replacement.scala:249:12, src/main/scala/xiangshan/frontend/WrBypass.scala:57:29, :63:29, :92:19, :93:18, :95:30, :98:31]
      ever_written_3 <= io_wen & ~hit & (&enq_idx) | ever_written_3;	// @[rocket-chip/src/main/scala/util/Replacement.scala:249:12, src/main/scala/xiangshan/frontend/WrBypass.scala:57:29, :63:29, :92:19, :93:18, :98:31]
      if (io_wen)	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:34:14]
        state_reg <=
          {~(state_reg_touch_way_sized[1]),
           state_reg_touch_way_sized[1] ? ~(state_reg_touch_way_sized[0]) : state_reg[1],
           state_reg_touch_way_sized[1] ? state_reg[0] : ~(state_reg_touch_way_sized[0])};	// @[rocket-chip/src/main/scala/util/Replacement.scala:168:72, :196:{33,43}, :202:12, :203:16, :206:16, :218:7, :245:38, rocket-chip/src/main/scala/util/package.scala:155:13, src/main/scala/xiangshan/frontend/WrBypass.scala:87:37]
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7]
      `FIRRTL_BEFORE_INITIAL	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7]
    initial begin	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7]
      `ifdef INIT_RANDOM_PROLOG_	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7]
        `INIT_RANDOM_PROLOG_	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7]
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7]
        ever_written_0 = _RANDOM[/*Zero width*/ 1'b0][4];	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7, :57:29]
        ever_written_1 = _RANDOM[/*Zero width*/ 1'b0][5];	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7, :57:29]
        ever_written_2 = _RANDOM[/*Zero width*/ 1'b0][6];	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7, :57:29]
        ever_written_3 = _RANDOM[/*Zero width*/ 1'b0][7];	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7, :57:29]
        state_reg = _RANDOM[/*Zero width*/ 1'b0][10:8];	// @[rocket-chip/src/main/scala/util/Replacement.scala:168:72, src/main/scala/xiangshan/frontend/WrBypass.scala:26:7, :57:29]
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7]
        ever_written_0 = 1'h0;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7, :57:29]
        ever_written_1 = 1'h0;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7, :57:29]
        ever_written_2 = 1'h0;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7, :57:29]
        ever_written_3 = 1'h0;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7, :57:29]
        state_reg = 3'h0;	// @[rocket-chip/src/main/scala/util/Replacement.scala:168:72]
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7]
      `FIRRTL_AFTER_INITIAL	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  CAMTemplate_41 idx_tag_cam (	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:53:27]
    .clock              (clock),
    .io_r_req_0_idx     (io_write_idx),
    .io_r_resp_0_0      (_idx_tag_cam_io_r_resp_0_0),
    .io_r_resp_0_1      (_idx_tag_cam_io_r_resp_0_1),
    .io_r_resp_0_2      (_idx_tag_cam_io_r_resp_0_2),
    .io_r_resp_0_3      (_idx_tag_cam_io_r_resp_0_3),
    .io_w_valid         (io_wen & ~hit),	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:63:29, :107:{23,26}]
    .io_w_bits_data_idx (io_write_idx),
    .io_w_bits_index    (enq_idx)	// @[rocket-chip/src/main/scala/util/Replacement.scala:249:12]
  );
  data_mem_0_4x2 data_mem_0_ext (	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:54:21]
    .R0_addr (hit_idx),	// @[src/main/scala/chisel3/util/OneHot.scala:32:10]
    .R0_en   (1'h1),	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7]
    .R0_clk  (clock),
    .R0_data (io_hit_data_0_bits),
    .W0_addr (hit ? hit_idx : enq_idx),	// @[rocket-chip/src/main/scala/util/Replacement.scala:249:12, src/main/scala/chisel3/util/OneHot.scala:32:10, src/main/scala/xiangshan/frontend/WrBypass.scala:63:29, :83:29]
    .W0_en   (io_wen),
    .W0_clk  (clock),
    .W0_data (io_write_data_0)
  );
  assign io_hit = hit;	// @[src/main/scala/xiangshan/frontend/WrBypass.scala:26:7, :63:29]
endmodule

